{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Transform": "AWS::Serverless-2016-10-31",
    "Outputs": {
        "RestAPIId": {
            "Value": {
                "Ref": "RestAPI"
            }
        },
        "APIHandlerName": {
            "Value": {
                "Ref": "APIHandler"
            }
        },
        "APIHandlerArn": {
            "Value": {
                "Fn::GetAtt": [
                    "APIHandler",
                    "Arn"
                ]
            }
        },
        "EndpointURL": {
            "Value": {
                "Fn::Sub": "https://${RestAPI}.execute-api.${AWS::Region}.amazonaws.com/msam/"
            }
        }
    },
    "Resources": {
        "IncomingCloudwatchAlarmRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Sid": "",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }]
                },
                "Policies": [{
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [{
                                "Action": [
                                    "mediapackage:List*",
                                    "mediapackage:Describe*",
                                    "medialive:List*",
                                    "medialive:Describe*",
                                    "mediastore:List*",
                                    "mediastore:Get*"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "ec2:Describe*",
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "elasticloadbalancing:Describe*",
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudwatch:ListMetrics",
                                    "cloudwatch:GetMetricStatistics",
                                    "cloudwatch:Describe*"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "autoscaling:Describe*",
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "dynamodb:*",
                                    "dax:*",
                                    "application-autoscaling:DeleteScalingPolicy",
                                    "application-autoscaling:DeregisterScalableTarget",
                                    "application-autoscaling:DescribeScalableTargets",
                                    "application-autoscaling:DescribeScalingActivities",
                                    "application-autoscaling:DescribeScalingPolicies",
                                    "application-autoscaling:PutScalingPolicy",
                                    "application-autoscaling:RegisterScalableTarget",
                                    "cloudwatch:DeleteAlarms",
                                    "cloudwatch:DescribeAlarmHistory",
                                    "cloudwatch:DescribeAlarms",
                                    "cloudwatch:DescribeAlarmsForMetric",
                                    "cloudwatch:GetMetricStatistics",
                                    "cloudwatch:ListMetrics",
                                    "cloudwatch:PutMetricAlarm",
                                    "datapipeline:ActivatePipeline",
                                    "datapipeline:CreatePipeline",
                                    "datapipeline:DeletePipeline",
                                    "datapipeline:DescribeObjects",
                                    "datapipeline:DescribePipelines",
                                    "datapipeline:GetPipelineDefinition",
                                    "datapipeline:ListPipelines",
                                    "datapipeline:PutPipelineDefinition",
                                    "datapipeline:QueryObjects",
                                    "ec2:DescribeVpcs",
                                    "ec2:DescribeSubnets",
                                    "ec2:DescribeSecurityGroups",
                                    "iam:GetRole",
                                    "iam:ListRoles",
                                    "sns:CreateTopic",
                                    "sns:DeleteTopic",
                                    "sns:ListSubscriptions",
                                    "sns:ListSubscriptionsByTopic",
                                    "sns:ListTopics",
                                    "sns:Subscribe",
                                    "sns:Unsubscribe",
                                    "sns:SetTopicAttributes",
                                    "lambda:CreateFunction",
                                    "lambda:ListFunctions",
                                    "lambda:ListEventSourceMappings",
                                    "lambda:CreateEventSourceMapping",
                                    "lambda:DeleteEventSourceMapping",
                                    "lambda:GetFunctionConfiguration",
                                    "lambda:DeleteFunction"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "iam:PassRole"
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                                "Condition": {
                                    "StringLike": {
                                        "iam:PassedToService": [
                                            "application-autoscaling.amazonaws.com",
                                            "dax.amazonaws.com"
                                        ]
                                    }
                                }
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "iam:CreateServiceLinkedRole"
                                ],
                                "Resource": "*",
                                "Condition": {
                                    "StringEquals": {
                                        "iam:AWSServiceName": [
                                            "replication.dynamodb.amazonaws.com",
                                            "dax.amazonaws.com",
                                            "dynamodb.application-autoscaling.amazonaws.com"
                                        ]
                                    }
                                }
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "s3:Get*",
                                    "s3:List*"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "logs:*"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "acm:ListCertificates",
                                    "cloudfront:Get*",
                                    "cloudfront:List*",
                                    "iam:ListServerCertificates",
                                    "route53:List*",
                                    "waf:ListWebACLs",
                                    "waf:GetWebACL"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            }
                        ]
                    },
                    "PolicyName": "IncomingCloudwatchAlarmRolePolicy"
                }]
            }
        },
        "IncomingCloudwatchAlarm": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Runtime": "python3.6",
                "Handler": "app.incoming_cloudwatch_alarm",
                "CodeUri": "s3://rodeolabz-us-west-2/msam/a9b46596c14e289e8436e719b52582e4",
                "Tags": {
                    "aws-chalice": "version=1.6.0:stage=dev:app=msam"
                },
                "Timeout": 300,
                "MemorySize": 2560,
                "Environment": {
                    "Variables": {
                        "ALARMS_TABLE_NAME": "media-services-application-mapper-alarms",
                        "BUILD_STAMP": "DEV_0_0_0",
                        "CACHE_ITEM_TTL": "7200",
                        "CHANNELS_TABLE_NAME": "media-services-application-mapper-channels",
                        "CONTENT_TABLE_NAME": "media-services-application-mapper-content",
                        "EVENTS_TABLE_NAME": "media-services-application-mapper-events",
                        "LAYOUT_TABLE_NAME": "media-services-application-mapper-layout",
                        "SETTINGS_TABLE_NAME": "media-services-application-mapper-settings"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IncomingCloudwatchAlarmRole",
                        "Arn"
                    ]
                }
            }
        },
        "UpdateNodesRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Sid": "",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }]
                },
                "Policies": [{
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [{
                                "Action": [
                                    "mediapackage:List*",
                                    "mediapackage:Describe*",
                                    "medialive:List*",
                                    "medialive:Describe*",
                                    "mediastore:List*",
                                    "mediastore:Get*"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "ec2:Describe*",
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "elasticloadbalancing:Describe*",
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudwatch:ListMetrics",
                                    "cloudwatch:GetMetricStatistics",
                                    "cloudwatch:Describe*"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "autoscaling:Describe*",
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "dynamodb:*",
                                    "dax:*",
                                    "application-autoscaling:DeleteScalingPolicy",
                                    "application-autoscaling:DeregisterScalableTarget",
                                    "application-autoscaling:DescribeScalableTargets",
                                    "application-autoscaling:DescribeScalingActivities",
                                    "application-autoscaling:DescribeScalingPolicies",
                                    "application-autoscaling:PutScalingPolicy",
                                    "application-autoscaling:RegisterScalableTarget",
                                    "cloudwatch:DeleteAlarms",
                                    "cloudwatch:DescribeAlarmHistory",
                                    "cloudwatch:DescribeAlarms",
                                    "cloudwatch:DescribeAlarmsForMetric",
                                    "cloudwatch:GetMetricStatistics",
                                    "cloudwatch:ListMetrics",
                                    "cloudwatch:PutMetricAlarm",
                                    "datapipeline:ActivatePipeline",
                                    "datapipeline:CreatePipeline",
                                    "datapipeline:DeletePipeline",
                                    "datapipeline:DescribeObjects",
                                    "datapipeline:DescribePipelines",
                                    "datapipeline:GetPipelineDefinition",
                                    "datapipeline:ListPipelines",
                                    "datapipeline:PutPipelineDefinition",
                                    "datapipeline:QueryObjects",
                                    "ec2:DescribeVpcs",
                                    "ec2:DescribeSubnets",
                                    "ec2:DescribeSecurityGroups",
                                    "iam:GetRole",
                                    "iam:ListRoles",
                                    "sns:CreateTopic",
                                    "sns:DeleteTopic",
                                    "sns:ListSubscriptions",
                                    "sns:ListSubscriptionsByTopic",
                                    "sns:ListTopics",
                                    "sns:Subscribe",
                                    "sns:Unsubscribe",
                                    "sns:SetTopicAttributes",
                                    "lambda:CreateFunction",
                                    "lambda:ListFunctions",
                                    "lambda:ListEventSourceMappings",
                                    "lambda:CreateEventSourceMapping",
                                    "lambda:DeleteEventSourceMapping",
                                    "lambda:GetFunctionConfiguration",
                                    "lambda:DeleteFunction"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "iam:PassRole"
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                                "Condition": {
                                    "StringLike": {
                                        "iam:PassedToService": [
                                            "application-autoscaling.amazonaws.com",
                                            "dax.amazonaws.com"
                                        ]
                                    }
                                }
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "iam:CreateServiceLinkedRole"
                                ],
                                "Resource": "*",
                                "Condition": {
                                    "StringEquals": {
                                        "iam:AWSServiceName": [
                                            "replication.dynamodb.amazonaws.com",
                                            "dax.amazonaws.com",
                                            "dynamodb.application-autoscaling.amazonaws.com"
                                        ]
                                    }
                                }
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "s3:Get*",
                                    "s3:List*"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "logs:*"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "acm:ListCertificates",
                                    "cloudfront:Get*",
                                    "cloudfront:List*",
                                    "iam:ListServerCertificates",
                                    "route53:List*",
                                    "waf:ListWebACLs",
                                    "waf:GetWebACL"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            }
                        ]
                    },
                    "PolicyName": "UpdateNodesRolePolicy"
                }]
            }
        },
        "UpdateNodes": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Runtime": "python3.6",
                "Handler": "app.update_nodes",
                "CodeUri": "s3://rodeolabz-us-west-2/msam/a9b46596c14e289e8436e719b52582e4",
                "Tags": {
                    "aws-chalice": "version=1.6.0:stage=dev:app=msam"
                },
                "Timeout": 300,
                "MemorySize": 2560,
                "Environment": {
                    "Variables": {
                        "ALARMS_TABLE_NAME": "media-services-application-mapper-alarms",
                        "BUILD_STAMP": "DEV_0_0_0",
                        "CACHE_ITEM_TTL": "7200",
                        "CHANNELS_TABLE_NAME": "media-services-application-mapper-channels",
                        "CONTENT_TABLE_NAME": "media-services-application-mapper-content",
                        "EVENTS_TABLE_NAME": "media-services-application-mapper-events",
                        "LAYOUT_TABLE_NAME": "media-services-application-mapper-layout",
                        "SETTINGS_TABLE_NAME": "media-services-application-mapper-settings"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "UpdateNodesRole",
                        "Arn"
                    ]
                },
                "Events": {
                    "UpdateNodesEvent": {
                        "Type": "Schedule",
                        "Properties": {
                            "Schedule": "rate(2 minutes)"
                        }
                    }
                }
            }
        },
        "UpdateConnectionsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Sid": "",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }]
                },
                "Policies": [{
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [{
                                "Action": [
                                    "mediapackage:List*",
                                    "mediapackage:Describe*",
                                    "medialive:List*",
                                    "medialive:Describe*",
                                    "mediastore:List*",
                                    "mediastore:Get*"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "ec2:Describe*",
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "elasticloadbalancing:Describe*",
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudwatch:ListMetrics",
                                    "cloudwatch:GetMetricStatistics",
                                    "cloudwatch:Describe*"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "autoscaling:Describe*",
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "dynamodb:*",
                                    "dax:*",
                                    "application-autoscaling:DeleteScalingPolicy",
                                    "application-autoscaling:DeregisterScalableTarget",
                                    "application-autoscaling:DescribeScalableTargets",
                                    "application-autoscaling:DescribeScalingActivities",
                                    "application-autoscaling:DescribeScalingPolicies",
                                    "application-autoscaling:PutScalingPolicy",
                                    "application-autoscaling:RegisterScalableTarget",
                                    "cloudwatch:DeleteAlarms",
                                    "cloudwatch:DescribeAlarmHistory",
                                    "cloudwatch:DescribeAlarms",
                                    "cloudwatch:DescribeAlarmsForMetric",
                                    "cloudwatch:GetMetricStatistics",
                                    "cloudwatch:ListMetrics",
                                    "cloudwatch:PutMetricAlarm",
                                    "datapipeline:ActivatePipeline",
                                    "datapipeline:CreatePipeline",
                                    "datapipeline:DeletePipeline",
                                    "datapipeline:DescribeObjects",
                                    "datapipeline:DescribePipelines",
                                    "datapipeline:GetPipelineDefinition",
                                    "datapipeline:ListPipelines",
                                    "datapipeline:PutPipelineDefinition",
                                    "datapipeline:QueryObjects",
                                    "ec2:DescribeVpcs",
                                    "ec2:DescribeSubnets",
                                    "ec2:DescribeSecurityGroups",
                                    "iam:GetRole",
                                    "iam:ListRoles",
                                    "sns:CreateTopic",
                                    "sns:DeleteTopic",
                                    "sns:ListSubscriptions",
                                    "sns:ListSubscriptionsByTopic",
                                    "sns:ListTopics",
                                    "sns:Subscribe",
                                    "sns:Unsubscribe",
                                    "sns:SetTopicAttributes",
                                    "lambda:CreateFunction",
                                    "lambda:ListFunctions",
                                    "lambda:ListEventSourceMappings",
                                    "lambda:CreateEventSourceMapping",
                                    "lambda:DeleteEventSourceMapping",
                                    "lambda:GetFunctionConfiguration",
                                    "lambda:DeleteFunction"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "iam:PassRole"
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                                "Condition": {
                                    "StringLike": {
                                        "iam:PassedToService": [
                                            "application-autoscaling.amazonaws.com",
                                            "dax.amazonaws.com"
                                        ]
                                    }
                                }
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "iam:CreateServiceLinkedRole"
                                ],
                                "Resource": "*",
                                "Condition": {
                                    "StringEquals": {
                                        "iam:AWSServiceName": [
                                            "replication.dynamodb.amazonaws.com",
                                            "dax.amazonaws.com",
                                            "dynamodb.application-autoscaling.amazonaws.com"
                                        ]
                                    }
                                }
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "s3:Get*",
                                    "s3:List*"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "logs:*"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "acm:ListCertificates",
                                    "cloudfront:Get*",
                                    "cloudfront:List*",
                                    "iam:ListServerCertificates",
                                    "route53:List*",
                                    "waf:ListWebACLs",
                                    "waf:GetWebACL"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            }
                        ]
                    },
                    "PolicyName": "UpdateConnectionsRolePolicy"
                }]
            }
        },
        "UpdateConnections": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Runtime": "python3.6",
                "Handler": "app.update_connections",
                "CodeUri": "s3://rodeolabz-us-west-2/msam/a9b46596c14e289e8436e719b52582e4",
                "Tags": {
                    "aws-chalice": "version=1.6.0:stage=dev:app=msam"
                },
                "Timeout": 300,
                "MemorySize": 2560,
                "Environment": {
                    "Variables": {
                        "ALARMS_TABLE_NAME": "media-services-application-mapper-alarms",
                        "BUILD_STAMP": "DEV_0_0_0",
                        "CACHE_ITEM_TTL": "7200",
                        "CHANNELS_TABLE_NAME": "media-services-application-mapper-channels",
                        "CONTENT_TABLE_NAME": "media-services-application-mapper-content",
                        "EVENTS_TABLE_NAME": "media-services-application-mapper-events",
                        "LAYOUT_TABLE_NAME": "media-services-application-mapper-layout",
                        "SETTINGS_TABLE_NAME": "media-services-application-mapper-settings"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "UpdateConnectionsRole",
                        "Arn"
                    ]
                },
                "Events": {
                    "UpdateConnectionsEvent": {
                        "Type": "Schedule",
                        "Properties": {
                            "Schedule": "rate(2 minutes)"
                        }
                    }
                }
            }
        },
        "UpdateAlarmsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Sid": "",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }]
                },
                "Policies": [{
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [{
                                "Action": [
                                    "mediapackage:List*",
                                    "mediapackage:Describe*",
                                    "medialive:List*",
                                    "medialive:Describe*",
                                    "mediastore:List*",
                                    "mediastore:Get*"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "ec2:Describe*",
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "elasticloadbalancing:Describe*",
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudwatch:ListMetrics",
                                    "cloudwatch:GetMetricStatistics",
                                    "cloudwatch:Describe*"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "autoscaling:Describe*",
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "dynamodb:*",
                                    "dax:*",
                                    "application-autoscaling:DeleteScalingPolicy",
                                    "application-autoscaling:DeregisterScalableTarget",
                                    "application-autoscaling:DescribeScalableTargets",
                                    "application-autoscaling:DescribeScalingActivities",
                                    "application-autoscaling:DescribeScalingPolicies",
                                    "application-autoscaling:PutScalingPolicy",
                                    "application-autoscaling:RegisterScalableTarget",
                                    "cloudwatch:DeleteAlarms",
                                    "cloudwatch:DescribeAlarmHistory",
                                    "cloudwatch:DescribeAlarms",
                                    "cloudwatch:DescribeAlarmsForMetric",
                                    "cloudwatch:GetMetricStatistics",
                                    "cloudwatch:ListMetrics",
                                    "cloudwatch:PutMetricAlarm",
                                    "datapipeline:ActivatePipeline",
                                    "datapipeline:CreatePipeline",
                                    "datapipeline:DeletePipeline",
                                    "datapipeline:DescribeObjects",
                                    "datapipeline:DescribePipelines",
                                    "datapipeline:GetPipelineDefinition",
                                    "datapipeline:ListPipelines",
                                    "datapipeline:PutPipelineDefinition",
                                    "datapipeline:QueryObjects",
                                    "ec2:DescribeVpcs",
                                    "ec2:DescribeSubnets",
                                    "ec2:DescribeSecurityGroups",
                                    "iam:GetRole",
                                    "iam:ListRoles",
                                    "sns:CreateTopic",
                                    "sns:DeleteTopic",
                                    "sns:ListSubscriptions",
                                    "sns:ListSubscriptionsByTopic",
                                    "sns:ListTopics",
                                    "sns:Subscribe",
                                    "sns:Unsubscribe",
                                    "sns:SetTopicAttributes",
                                    "lambda:CreateFunction",
                                    "lambda:ListFunctions",
                                    "lambda:ListEventSourceMappings",
                                    "lambda:CreateEventSourceMapping",
                                    "lambda:DeleteEventSourceMapping",
                                    "lambda:GetFunctionConfiguration",
                                    "lambda:DeleteFunction"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "iam:PassRole"
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                                "Condition": {
                                    "StringLike": {
                                        "iam:PassedToService": [
                                            "application-autoscaling.amazonaws.com",
                                            "dax.amazonaws.com"
                                        ]
                                    }
                                }
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "iam:CreateServiceLinkedRole"
                                ],
                                "Resource": "*",
                                "Condition": {
                                    "StringEquals": {
                                        "iam:AWSServiceName": [
                                            "replication.dynamodb.amazonaws.com",
                                            "dax.amazonaws.com",
                                            "dynamodb.application-autoscaling.amazonaws.com"
                                        ]
                                    }
                                }
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "s3:Get*",
                                    "s3:List*"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "logs:*"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "acm:ListCertificates",
                                    "cloudfront:Get*",
                                    "cloudfront:List*",
                                    "iam:ListServerCertificates",
                                    "route53:List*",
                                    "waf:ListWebACLs",
                                    "waf:GetWebACL"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            }
                        ]
                    },
                    "PolicyName": "UpdateAlarmsRolePolicy"
                }]
            }
        },
        "UpdateAlarms": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Runtime": "python3.6",
                "Handler": "app.update_alarms",
                "CodeUri": "s3://rodeolabz-us-west-2/msam/a9b46596c14e289e8436e719b52582e4",
                "Tags": {
                    "aws-chalice": "version=1.6.0:stage=dev:app=msam"
                },
                "Timeout": 300,
                "MemorySize": 2560,
                "Environment": {
                    "Variables": {
                        "ALARMS_TABLE_NAME": "media-services-application-mapper-alarms",
                        "BUILD_STAMP": "DEV_0_0_0",
                        "CACHE_ITEM_TTL": "7200",
                        "CHANNELS_TABLE_NAME": "media-services-application-mapper-channels",
                        "CONTENT_TABLE_NAME": "media-services-application-mapper-content",
                        "EVENTS_TABLE_NAME": "media-services-application-mapper-events",
                        "LAYOUT_TABLE_NAME": "media-services-application-mapper-layout",
                        "SETTINGS_TABLE_NAME": "media-services-application-mapper-settings"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "UpdateAlarmsRole",
                        "Arn"
                    ]
                },
                "Events": {
                    "UpdateAlarmsEvent": {
                        "Type": "Schedule",
                        "Properties": {
                            "Schedule": "rate(1 minute)"
                        }
                    }
                }
            }
        },
        "ApiHandlerRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Sid": "",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }]
                },
                "Policies": [{
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [{
                                "Action": [
                                    "mediapackage:List*",
                                    "mediapackage:Describe*",
                                    "medialive:List*",
                                    "medialive:Describe*",
                                    "mediastore:List*",
                                    "mediastore:Get*"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "ec2:Describe*",
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "elasticloadbalancing:Describe*",
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudwatch:ListMetrics",
                                    "cloudwatch:GetMetricStatistics",
                                    "cloudwatch:Describe*"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": "autoscaling:Describe*",
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "dynamodb:*",
                                    "dax:*",
                                    "application-autoscaling:DeleteScalingPolicy",
                                    "application-autoscaling:DeregisterScalableTarget",
                                    "application-autoscaling:DescribeScalableTargets",
                                    "application-autoscaling:DescribeScalingActivities",
                                    "application-autoscaling:DescribeScalingPolicies",
                                    "application-autoscaling:PutScalingPolicy",
                                    "application-autoscaling:RegisterScalableTarget",
                                    "cloudwatch:DeleteAlarms",
                                    "cloudwatch:DescribeAlarmHistory",
                                    "cloudwatch:DescribeAlarms",
                                    "cloudwatch:DescribeAlarmsForMetric",
                                    "cloudwatch:GetMetricStatistics",
                                    "cloudwatch:ListMetrics",
                                    "cloudwatch:PutMetricAlarm",
                                    "datapipeline:ActivatePipeline",
                                    "datapipeline:CreatePipeline",
                                    "datapipeline:DeletePipeline",
                                    "datapipeline:DescribeObjects",
                                    "datapipeline:DescribePipelines",
                                    "datapipeline:GetPipelineDefinition",
                                    "datapipeline:ListPipelines",
                                    "datapipeline:PutPipelineDefinition",
                                    "datapipeline:QueryObjects",
                                    "ec2:DescribeVpcs",
                                    "ec2:DescribeSubnets",
                                    "ec2:DescribeSecurityGroups",
                                    "iam:GetRole",
                                    "iam:ListRoles",
                                    "sns:CreateTopic",
                                    "sns:DeleteTopic",
                                    "sns:ListSubscriptions",
                                    "sns:ListSubscriptionsByTopic",
                                    "sns:ListTopics",
                                    "sns:Subscribe",
                                    "sns:Unsubscribe",
                                    "sns:SetTopicAttributes",
                                    "lambda:CreateFunction",
                                    "lambda:ListFunctions",
                                    "lambda:ListEventSourceMappings",
                                    "lambda:CreateEventSourceMapping",
                                    "lambda:DeleteEventSourceMapping",
                                    "lambda:GetFunctionConfiguration",
                                    "lambda:DeleteFunction"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "iam:PassRole"
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                                "Condition": {
                                    "StringLike": {
                                        "iam:PassedToService": [
                                            "application-autoscaling.amazonaws.com",
                                            "dax.amazonaws.com"
                                        ]
                                    }
                                }
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "iam:CreateServiceLinkedRole"
                                ],
                                "Resource": "*",
                                "Condition": {
                                    "StringEquals": {
                                        "iam:AWSServiceName": [
                                            "replication.dynamodb.amazonaws.com",
                                            "dax.amazonaws.com",
                                            "dynamodb.application-autoscaling.amazonaws.com"
                                        ]
                                    }
                                }
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "s3:Get*",
                                    "s3:List*"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "logs:*"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "acm:ListCertificates",
                                    "cloudfront:Get*",
                                    "cloudfront:List*",
                                    "iam:ListServerCertificates",
                                    "route53:List*",
                                    "waf:ListWebACLs",
                                    "waf:GetWebACL"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            }
                        ]
                    },
                    "PolicyName": "ApiHandlerRolePolicy"
                }]
            }
        },
        "RestAPI": {
            "Type": "AWS::Serverless::Api",
            "Properties": {
                "StageName": "msam",
                "DefinitionBody": {
                    "swagger": "2.0",
                    "info": {
                        "version": "1.0",
                        "title": "msam"
                    },
                    "schemes": [
                        "https"
                    ],
                    "paths": {
                        "/layout/view/{view}": {
                            "get": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                    "name": "view",
                                    "in": "path",
                                    "required": true,
                                    "type": "string"
                                }]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/layout/nodes": {
                            "put": {
                                "consumes": [
                                    "application/json",
                                    "application/x-www-form-urlencoded"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }]
                            },
                            "post": {
                                "consumes": [
                                    "application/json",
                                    "application/x-www-form-urlencoded"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'PUT,POST,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/layout/node/{node_id}": {
                            "delete": {
                                "consumes": [
                                    "application/json",
                                    "application/x-www-form-urlencoded"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                    "name": "node_id",
                                    "in": "path",
                                    "required": true,
                                    "type": "string"
                                }]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'DELETE,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/channels": {
                            "get": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/channel/{name}": {
                            "put": {
                                "consumes": [
                                    "application/json",
                                    "application/x-www-form-urlencoded"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                    "name": "name",
                                    "in": "path",
                                    "required": true,
                                    "type": "string"
                                }]
                            },
                            "post": {
                                "consumes": [
                                    "application/json",
                                    "application/x-www-form-urlencoded"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                    "name": "name",
                                    "in": "path",
                                    "required": true,
                                    "type": "string"
                                }]
                            },
                            "get": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                    "name": "name",
                                    "in": "path",
                                    "required": true,
                                    "type": "string"
                                }]
                            },
                            "delete": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                    "name": "name",
                                    "in": "path",
                                    "required": true,
                                    "type": "string"
                                }]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'PUT,POST,GET,DELETE,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/settings/{item_key}": {
                            "get": {
                                "consumes": [
                                    "application/json",
                                    "application/x-www-form-urlencoded"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                    "name": "item_key",
                                    "in": "path",
                                    "required": true,
                                    "type": "string"
                                }]
                            },
                            "put": {
                                "consumes": [
                                    "application/json",
                                    "application/x-www-form-urlencoded"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                    "name": "item_key",
                                    "in": "path",
                                    "required": true,
                                    "type": "string"
                                }]
                            },
                            "post": {
                                "consumes": [
                                    "application/json",
                                    "application/x-www-form-urlencoded"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                    "name": "item_key",
                                    "in": "path",
                                    "required": true,
                                    "type": "string"
                                }]
                            },
                            "delete": {
                                "consumes": [
                                    "application/json",
                                    "application/x-www-form-urlencoded"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                    "name": "item_key",
                                    "in": "path",
                                    "required": true,
                                    "type": "string"
                                }]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,POST,DELETE,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/cached/{service}/{region}": {
                            "get": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                        "name": "service",
                                        "in": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "name": "region",
                                        "in": "path",
                                        "required": true,
                                        "type": "string"
                                    }
                                ]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/cached": {
                            "put": {
                                "consumes": [
                                    "application/json",
                                    "application/x-www-form-urlencoded"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }]
                            },
                            "post": {
                                "consumes": [
                                    "application/json",
                                    "application/x-www-form-urlencoded"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'PUT,POST,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/regions": {
                            "get": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/cloudwatch/alarms/all/{region}": {
                            "get": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                    "name": "region",
                                    "in": "path",
                                    "required": true,
                                    "type": "string"
                                }]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/cloudwatch/alarm/{alarm_name}/region/{region}/subscribe": {
                            "put": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                        "name": "alarm_name",
                                        "in": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "name": "region",
                                        "in": "path",
                                        "required": true,
                                        "type": "string"
                                    }
                                ]
                            },
                            "post": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                        "name": "alarm_name",
                                        "in": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "name": "region",
                                        "in": "path",
                                        "required": true,
                                        "type": "string"
                                    }
                                ]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'PUT,POST,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/cloudwatch/alarm/{alarm_name}/region/{region}/unsubscribe": {
                            "put": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                        "name": "alarm_name",
                                        "in": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "name": "region",
                                        "in": "path",
                                        "required": true,
                                        "type": "string"
                                    }
                                ]
                            },
                            "post": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                        "name": "alarm_name",
                                        "in": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "name": "region",
                                        "in": "path",
                                        "required": true,
                                        "type": "string"
                                    }
                                ]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'PUT,POST,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/cloudwatch/alarm/{alarm_name}/region/{region}/subscribers": {
                            "get": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                        "name": "alarm_name",
                                        "in": "path",
                                        "required": true,
                                        "type": "string"
                                    },
                                    {
                                        "name": "region",
                                        "in": "path",
                                        "required": true,
                                        "type": "string"
                                    }
                                ]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/cloudwatch/alarms/{alarm_state}/subscribers": {
                            "get": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                    "name": "alarm_state",
                                    "in": "path",
                                    "required": true,
                                    "type": "string"
                                }]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/cloudwatch/alarms/subscriber/{resource_arn}": {
                            "get": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                    "name": "resource_arn",
                                    "in": "path",
                                    "required": true,
                                    "type": "string"
                                }]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/cloudwatch/alarms/subscribed": {
                            "get": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/cloudwatch/events/state/{state}": {
                            "get": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }],
                                "parameters": [{
                                    "name": "state",
                                    "in": "path",
                                    "required": true,
                                    "type": "string"
                                }]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/ping": {
                            "get": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws_proxy"
                                },
                                "security": [{
                                    "api_key": []
                                }]
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        }
                    },
                    "definitions": {
                        "Empty": {
                            "type": "object",
                            "title": "Empty Schema"
                        }
                    },
                    "x-amazon-apigateway-binary-media-types": [
                        "application/octet-stream",
                        "application/x-tar",
                        "application/zip",
                        "audio/basic",
                        "audio/ogg",
                        "audio/mp4",
                        "audio/mpeg",
                        "audio/wav",
                        "audio/webm",
                        "image/png",
                        "image/jpg",
                        "image/jpeg",
                        "image/gif",
                        "video/ogg",
                        "video/mpeg",
                        "video/webm"
                    ],
                    "securityDefinitions": {
                        "api_key": {
                            "type": "apiKey",
                            "name": "x-api-key",
                            "in": "header"
                        }
                    }
                }
            }
        },
        "APIHandler": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Runtime": "python3.6",
                "Handler": "app.app",
                "CodeUri": "s3://rodeolabz-us-west-2/msam/a9b46596c14e289e8436e719b52582e4",
                "Tags": {
                    "aws-chalice": "version=1.6.0:stage=dev:app=msam"
                },
                "Timeout": 300,
                "MemorySize": 2560,
                "Environment": {
                    "Variables": {
                        "ALARMS_TABLE_NAME": "media-services-application-mapper-alarms",
                        "BUILD_STAMP": "DEV_0_0_0",
                        "CACHE_ITEM_TTL": "7200",
                        "CHANNELS_TABLE_NAME": "media-services-application-mapper-channels",
                        "CONTENT_TABLE_NAME": "media-services-application-mapper-content",
                        "EVENTS_TABLE_NAME": "media-services-application-mapper-events",
                        "LAYOUT_TABLE_NAME": "media-services-application-mapper-layout",
                        "SETTINGS_TABLE_NAME": "media-services-application-mapper-settings"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "ApiHandlerRole",
                        "Arn"
                    ]
                }
            }
        },
        "APIHandlerInvokePermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Ref": "APIHandler"
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPIId}/*",
                        {
                            "RestAPIId": {
                                "Ref": "RestAPI"
                            }
                        }
                    ]
                }
            }
        }
    }
}